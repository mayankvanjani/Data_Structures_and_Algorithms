import random

class HT():
    def __init__(self):
        self._T1 = [None] * 10#List of tuples
        self._T2 = [None] * 10#List of tuples
        self._r = random.random()

    def __getitem__(self,key):
        lst = self._T1
        b = hash((key,0,self._r)) % len(lst)

        while lst[b]:
            if lst[b][0] == key:
                return lst[b]
            if lst == self._T1:
                lst = self._T2
                b = hash((key,1,self._r)) % len(lst)
            else:
                lst = self._T1
                b = hash((key,1,self._r)) % len(lst)

        return None
        
        '''
        b1 = hash((key,0,r)) % len(self._T1)
        b2 = hash((key,1,r)) % len(self._T2)
        #bucket = hash(key,0,r) % len(self._T1)
        while self._T1[b1] or self._T2[b2]:
            if self._T1[b1] and self._T1[b1][0] == key:
                return self._T1[b1]
            if self._T2[b2] and self._T2[b2][0] == key:
                return self._T2[b2]
            b1 = (b1+1) % len(self._T1)
            b2 = (b2+1) % len(self._T2)
        '''

            
    def __setitem__(self,k,v):
        lst = self._T1
        b = hash((k,0,self._r)) % len(lst)
        counter = 0
        while lst[b] and counter < 2*len(lst):
            if lst == self._T1:
                lst = self._T2
                b = hash((k,1,self._r)) % len(lst)
            else:
                lst = self._T1
                b = hash((k,0,self._r)) % len(lst)
            counter += 1
            
        if counter >= 2*len(lst):
            temp1 = [None] * (len(self._T1) * 2)
            temp2 = [None] * (len(self._T2) * 2)
            for i in range(len(self._T1)):
                temp1[i] = self._T1[i]
            for i in range(len(self._T2)):
                temp1[i] = self._T2[i]
            self._T1 = temp1
            self._T2 = temp2
            #print("Infinite Loop")
        else:
            lst[b] = (k,v)
                
    def __delitem__(self,k):
        pass

    def __len__(self):
        counter = 0
        for i in self._T1:
            if i:
                counter += 1
        for i in self._T2:
            if i:
                counter += 1
        return counter
                
    def __contains__(self,key):
        for i in self._T1:
            if i and i[0] == key:
                return True
        for i in self._T2:
            if i and i[0] == key:
                return True

    def __iter__(self):
        for i in self._T1:
            if i:
                yield i
        for i in self._T2:
            if i:
                yield i

    def keys(self):
        for i in self._T1:
            if i:
                yield i[0]
        for i in self._T2:
            if i:
                yield i[0]
    def values(self):
        for i in self._T1:
            if i:
                yield i[1]
        for i in self._T2:
            if i:
                yield i[1]
    def items(self):
        for i in self._T1:
            if i:
                yield i
        for i in self._T2:
            if i:
                yield i



T = HT()
for i in range(200):
    T[i] = i*i

for i in T:
    print(i, i[0])
'''
for i in T.keys():
    #print(i)
    T[i] = T[i]+1

for i in range(5,400):
    if i in T:
        del T[i]
'''

K = list(T.items())
K.sort()
print(K)
print()
#print(T._T1)
print()
#print(T._T2)
print()
print(len(T))
print(len(K))

